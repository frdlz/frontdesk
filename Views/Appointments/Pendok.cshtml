@model IEnumerable<Frontdesk6.Models.Frontdesk.Appointment>

@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutLTEAppoint";
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
   
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/lib/jquery-datetimepicker/jquery.datetimepicker.css" />
    <style>
        .btnfx {
            width: 60px;
        }

        @@media screen and (max-width: 600px) {
            table thead {
                display: none;
            }

            table td {
                display: flex;
            }

                table td::before {
                    content: attr(label);
                    font-weight: bold;
                    width: 80px;
                    min-width: 80px;
                }
        }
    </style>

</head>
<div class="container">
    <div class="card border rounded mr-0 mt-1">
        <div class="card-body">
            <table class="table border-0 text-wrap table-borderless table-striped">
                <thead>
                    <tr>
                        <th>
                            -
                        </th>
                        <th>

                            Nomor
                        </th>
                        <th>
                            Tanggal
                        </th>
                        <th>
                            Subject
                        </th>


                        <th>
                            Status
                        </th>
                        <th>Act</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{ int i = 1; }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td label="-">
                                @Html.Raw(i++)
                            </td>
                            <td label="Nomor" id="callthis">


                                @Html.DisplayFor(modelItem => item.NomorApp)
                            </td>
                            <td label="Tanggal">
                                @Html.DisplayFor(modelItem => item.Tanggal)
                            </td>
                            <td label="Subject">
                                @Html.DisplayFor(modelItem => item.Subject)
                            </td>


                            <td label="Status">
                                @Html.DisplayFor(modelItem => item.StatusFrontdesk)
                            </td>
                            <td label="Act">
                                @if (item.StatusFrontdesk == Frontdesk6.Models.Frontdesk.Appointment.status.mulai)
                                {

                                    <a asp-action="Proses" asp-route-id="@item.AppointmentID" class="btn btnfx btn-success"><i class="fas fa-play"></i></a>

                                }

                                @if (item.StatusFrontdesk == Frontdesk6.Models.Frontdesk.Appointment.status.proses)
                                {

                                    <a asp-action="Selesai" asp-route-id="@item.AppointmentID" class="btn btnfx btn-danger"><i class="fas fa-stop"></i></a>

                                }
                                <a asp-action="Selesai" asp-route-id="@item.AppointmentID" class="btn btnfx btn-danger"><i class="fas fa-volume-up"></i></a>
                                
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

</div>
<div>
    <h1 class="text-light">Text to Speech</h1>
    <p class="lead text-light mt-4">Select Voice</p>
    <select id="voices" class="form-select bg-secondary text-light"></select>
    <div class="d-flex mt-4 text-light">
        <div>
            <p class="lead">Volume</p>
            <input type="range" min="0" max="1" value="1" step="0.1" id="volume" />
            <span id="volume-label" class="ms-2">1</span>
        </div>
        <div class="mx-5">
            <p class="lead">Rate</p>
            <input type="range" min="0.1" max="10" value="1" id="rate" step="0.1" />
            <span id="rate-label" class="ms-2">1</span>
        </div>
        <div>
            <p class="lead">Pitch</p>
            <input type="range" min="0" max="2" value="1" step="0.1" id="pitch" />
            <span id="pitch-label" class="ms-2">1</span>
        </div>
    </div>
    <textarea class="form-control bg-dark text-light mt-5" cols="30" rows="10" placeholder="Type here..."></textarea>
    <div class="mb-5">
        <button id="start" class="btn btn-success mt-5 me-3">Start</button>
        <button id="pause" class="btn btn-warning mt-5 me-3">Pause</button>
        <button id="resume" class="btn btn-info mt-5 me-3">Resume</button>
        <button id="cancel" class="btn btn-danger mt-5 me-3">Cancel</button>
    </div>
</div>
<script>
    window.setMobileTable = function (selector) {
        // if (window.innerWidth > 600) return false;
        const tableEl = document.querySelector(selector);
        const thEls = tableEl.querySelectorAll('thead th');
        const tdLabels = Array.from(thEls).map(el => el.innerText);
        tableEl.querySelectorAll('tbody tr').forEach(tr => {
            Array.from(tr.children).forEach(
                (td, ndx) => td.setAttribute('label', tdLabels[ndx])
            );
        });
    }
</script>
<script>
    let speech = new SpeechSynthesisUtterance();

    speech.lang = "id-ID";

    let voices = [];

    window.speechSynthesis.onvoiceschanged = () => {

        voices = window.speechSynthesis.getVoices();

        speech.voice = voices[0];

        let voiceSelect = document.querySelector("#voices");
        voices.forEach((voice, i) => (voiceSelect.options[i] = new Option(voice.name, i)));


    };

    document.querySelector("#rate").addEventListener("input", () => {
        const rate = document.querySelector("rate").value;

        speech.rate = rate;

        document.querySelector("#rate-label").innerHTML = rate;
    });

    document.querySelector("#pitch").addEventListener("input", () => {
        const pitch = document.querySelector("#pitch").value;

        speech.pitch = pitch;

        document.querySelector('#pitch-label').innerHTML = pitch;

    });

    document.querySelector("#voices").addEventListener("change", () => {

        speech.voice = voices[document.querySelector("#voices").value];
    });

    document.querySelector("#start").addEventListener("click", () => {

        speech.text = document.querySelector("textarea").value;


        window.speechSynthesis.speak(speech);
    });

    document.querySelector("#pause").addEventListener("click", () => {

        window.speechSynthesis.pause();
    });

    document.querySelector("#resume").addEventListener("click", () => {

        window.speechSynthesis.resume();
    });

    document.querySelector("#cancel").addEventListener("click", () => {

        window.speechSynthesis.cancel();
    });
</script>